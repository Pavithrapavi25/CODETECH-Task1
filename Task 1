<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Enhanced Shopping Experience</title>
    <link rel="stylesheet" href="styles.css">
    
</head>
<body>

    <h1>Enhanced Shopping Experience</h1>

    <!-- User account login/signup -->
    <div id="user-section">
        <button onclick="login()">Login</button>
        <button onclick="signup()">Signup</button>
        <p id="user-info"></p>
    </div>

    <!-- Controls for search, filter, and sorting -->
    <div id="controls">
        <input type="text" id="search-bar" placeholder="Search products...">
        <div id="filter-sort">
            <select id="sort-options">
                <option value="name">Sort by Name</option>
                <option value="price-low">Sort by Price (Low to High)</option>
                <option value="price-high">Sort by Price (High to Low)</option>
            </select>
            <select id="category-filter">
                <option value="all">All Categories</option>
                <option value="Ice Cream">Ice Cream</option>
                <option value="Chocolate">Chocolate</option>
                <option value="Chips">Chips</option>
            </select>
        </div>
    </div>

    <!-- Product container -->
    <div class="product-container" id="product-container">
        <!-- Products will be displayed here -->
    </div>

    <!-- Cart display -->
    <div id="cart">
        <h2>Cart</h2>
        <ul id="cart-items"></ul>
        <p id="cart-total">Total: $0.00</p>
        <button id="checkout-button">Checkout</button>
    </div>

    <script>
        // Sample user management
        function login() {
            const userName = prompt("Enter your username:");
            if (userName) {
                localStorage.setItem('user', userName);
                document.getElementById('user-info').textContent = `Welcome, ${userName}!`;
            }
        }

        function signup() {
            alert("Signup functionality coming soon!");
        }

        const products = [
            { id: 1, name: "Vanilla Cone", category: "Ice Cream", price: 2.5, description: "Classic vanilla cone.", image: "images/vanilla_cone.jpg" },
            { id: 2, name: "Chocolate Sundae", category: "Ice Cream", price: 3.0, description: "Rich chocolate sundae.", image: "images/chocolate_sundae.jpg" },
            { id: 3, name: "Dairy Milk", category: "Chocolate", price: 1.2, description: "Creamy milk chocolate.", image: "images/dairymilk.jpg" },
            { id: 4, name: "Lays Classic", category: "Chips", price: 1.0, description: "Salted chips.", image: "images/lays_classic.jpg" }
        ];

        const cart = [];

        function displayProducts(filteredProducts) {
            const productContainer = document.getElementById('product-container');
            productContainer.innerHTML = '';

            filteredProducts.forEach(product => {
                const productCard = document.createElement('div');
                productCard.className = 'product-card';
                productCard.innerHTML = `
                    <img src="${product.image}" alt="${product.name}">
                    <h3>${product.name}</h3>
                    <p>${product.description}</p>
                    <p class="price">$${product.price.toFixed(2)}</p>
                    <button onclick="addToCart(${product.id})">Add to Cart</button>
                `;
                productContainer.appendChild(productCard);
            });
        }

        function addToCart(productId) {
            const product = products.find(p => p.id === productId);
            cart.push(product);
            updateCartDisplay();
        }

        function updateCartDisplay() {
            const cartItems = document.getElementById('cart-items');
            const cartTotal = document.getElementById('cart-total');
            cartItems.innerHTML = '';
            let total = 0;

            cart.forEach(item => {
                total += item.price;
                const li = document.createElement('li');
                li.textContent = `${item.name} - $${item.price.toFixed(2)}`;
                cartItems.appendChild(li);
            });

            cartTotal.textContent = `Total: $${total.toFixed(2)}`;
        }

        function applyFiltersAndSorting() {
            const query = document.getElementById('search-bar').value.toLowerCase();
            const sortOption = document.getElementById('sort-options').value;
            const category = document.getElementById('category-filter').value;

            let filteredProducts = products.filter(p =>
                (category === "all" || p.category === category) &&
                (p.name.toLowerCase().includes(query) || p.description.toLowerCase().includes(query))
            );

            if (sortOption === "price-low") {
                filteredProducts.sort((a, b) => a.price - b.price);
            } else if (sortOption === "price-high") {
                filteredProducts.sort((a, b) => b.price - a.price);
            } else if (sortOption === "name") {
                filteredProducts.sort((a, b) => a.name.localeCompare(b.name));
            }

            displayProducts(filteredProducts);
        }

        document.getElementById('search-bar').addEventListener('input', applyFiltersAndSorting);
        document.getElementById('sort-options').addEventListener('change', applyFiltersAndSorting);
        document.getElementById('category-filter').addEventListener('change', applyFiltersAndSorting);

        document.getElementById('checkout-button').addEventListener('click', () => {
            alert("Secure payment integration coming soon!");
        });

        // Display all products initially
        displayProducts(products);
    </script>
</body>
</html>
<script src="script.js"></script>
<script src="https://js.stripe.com/v3/"></script>
<script>
   <script>
    // Signup functionality
    function signup() {
        const username = prompt("Enter your username:");
        const email = prompt("Enter your email:");
        const password = prompt("Enter your password:");

        if (!username || !email || !password) {
            alert("All fields are required!");
            return;
        }

        const userData = {
            username,
            email,
            password // NOTE: In real-world applications, use hashing to store passwords.
        };

        // Save user data to localStorage (simulate database)
        localStorage.setItem('user', JSON.stringify(userData));

        alert("Signup successful! Please login to continue.");
    }

    // Login functionality
    function login() {
        const storedUser = JSON.parse(localStorage.getItem('user'));

        if (!storedUser) {
            alert("No user found. Please sign up first.");
            return;
        }

        const username = prompt("Enter your username:");
        const password = prompt("Enter your password:");

        // Validate user input
        if (username === storedUser.username && password === storedUser.password) {
            document.getElementById('user-info').textContent = `Welcome, ${storedUser.username}!`;
            alert(`Welcome back, ${storedUser.username}!`);
        } else {
            alert("Invalid username or password. Please try again.");
        }
    }
</script>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sign Up</title>
</head>
<body>

    <h1>Sign Up for Enhanced Shopping Experience</h1>

    <!-- Sign Up Form -->
    <div id="signup-form">
        <button onclick="signup()">Sign Up</button>
        <p id="signup-message"></p>
    </div>

    <script>
        function signup() {
            // Prompt the user to enter their details
            const username = prompt("Enter your username:");
            const email = prompt("Enter your email:");
            const password = prompt("Enter your password:");

            // Simple validation for empty inputs
            if (!username || !email || !password) {
                alert("All fields are required!");
                return;
            }

            // Check if the user already exists in localStorage
            const existingUser = JSON.parse(localStorage.getItem('user'));

            if (existingUser && existingUser.username === username) {
                alert("User already exists. Please login.");
                return;
            }

            // Save the user data in localStorage
            const userData = {
                username,
                email,
                password // Note: in a real application, passwords should be hashed for security.
            };

            localStorage.setItem('user', JSON.stringify(userData));

            // Show a success message
            document.getElementById('signup-message').textContent = `Sign-up successful! You can now log in.`;

            alert("Signup successful! You can now log in.");
        }
    </script>

</body>
</html>
// css file
/* Styles for layout */
body {
  font-family: Arial, sans-serif;
  margin: 20px;
}
#controls {
  display: flex;
  justify-content: space-between;
  margin-bottom: 20px;
}
#filter-sort {
  display: flex;
  gap: 10px;
}
.product-container {
  display: flex;
  flex-wrap: wrap;
  gap: 20px;
}
.product-card {
  border: 1px solid #ddd;
  padding: 10px;
  width: 200px;
  text-align: center;
}
.product-card img {
  max-width: 100px;
  height: auto;
  margin-bottom: 10px;
}
#cart {
  margin-top: 20px;
  border: 1px solid #ddd;
  padding: 10px;
  width: 300px;
}
/* Responsive Design */
@media (max-width: 600px) {
  .product-container {
      flex-direction: column;
  }
  .product-card {
      width: 100%;
  }
  #controls {
      flex-direction: column;
  }
  #cart {
      width: 100%;
  }
}

//javascript
function addToCart(productId) {
  const existingProduct = cart.find(p => p.id === productId);
  if (existingProduct) {
      existingProduct.quantity++;
  } else {
      const product = products.find(p => p.id === productId);
      cart.push({ ...product, quantity: 1 });
  }
  updateCartDisplay();
}

function updateCartDisplay() {
  cartItems.innerHTML = '';
  let total = 0;

  cart.forEach(item => {
      total += item.price * item.quantity;
      const li = document.createElement('li');
      li.textContent = `${item.name} - $${item.price.toFixed(2)} x ${item.quantity}`;
      cartItems.appendChild(li);
  });

  cartTotal.textContent = `Total: $${total.toFixed(2)}`;
}
function logout() {
  localStorage.removeItem('user');
  document.getElementById('user-info').textContent = '';
}
// Sample user management
function login() {
  const userName = prompt("Enter your username:");
  if (userName) {
      localStorage.setItem('user', userName);
      document.getElementById('user-info').textContent = `Welcome, ${userName}!`;
  }
}

function signup() {
  alert("Signup functionality coming soon!");
}

const products = [
  { id: 1, name: "Vanilla Cone", category: "Ice Cream", price: 2.5, description: "Classic vanilla cone.", image: "images/vanilla_cone.jpg" },
  { id: 2, name: "Chocolate Sundae", category: "Ice Cream", price: 3.0, description: "Rich chocolate sundae.", image: "images/chocolate_sundae.jpg" },
  { id: 3, name: "Dairy Milk", category: "Chocolate", price: 1.2, description: "Creamy milk chocolate.", image: "images/dairymilk.jpg" },
  { id: 4, name: "Lays Classic", category: "Chips", price: 1.0, description: "Salted chips.", image: "images/lays_classic.jpg" }
];

const cart = [];

function displayProducts(filteredProducts) {
  const productContainer = document.getElementById('product-container');
  productContainer.innerHTML = '';

  filteredProducts.forEach(product => {
      const productCard = document.createElement('div');
      productCard.className = 'product-card';
      productCard.innerHTML = `
          <img src="${product.image}" alt="${product.name}">
          <h3>${product.name}</h3>
          <p>${product.description}</p>
          <p class="price">$${product.price.toFixed(2)}</p>
          <button onclick="addToCart(${product.id})">Add to Cart</button>
      `;
      productContainer.appendChild(productCard);
  });
}

function addToCart(productId) {
  const product = products.find(p => p.id === productId);
  cart.push(product);
  updateCartDisplay();
}

function updateCartDisplay() {
  const cartItems = document.getElementById('cart-items');
  const cartTotal = document.getElementById('cart-total');
  cartItems.innerHTML = '';
  let total = 0;

  cart.forEach(item => {
      total += item.price;
      const li = document.createElement('li');
      li.textContent = `${item.name} - $${item.price.toFixed(2)}`;
      cartItems.appendChild(li);
  });

  cartTotal.textContent = `Total: $${total.toFixed(2)}`;
}

function applyFiltersAndSorting() {
  const query = document.getElementById('search-bar').value.toLowerCase();
  const sortOption = document.getElementById('sort-options').value;
  const category = document.getElementById('category-filter').value;

  let filteredProducts = products.filter(p =>
      (category === "all" || p.category === category) &&
      (p.name.toLowerCase().includes(query) || p.description.toLowerCase().includes(query))
  );

  if (sortOption === "price-low") {
      filteredProducts.sort((a, b) => a.price - b.price);
  } else if (sortOption === "price-high") {
      filteredProducts.sort((a, b) => b.price - a.price);
  } else if (sortOption === "name") {
      filteredProducts.sort((a, b) => a.name.localeCompare(b.name));
  }

  displayProducts(filteredProducts);
}

document.getElementById('search-bar').addEventListener('input', applyFiltersAndSorting);
document.getElementById('sort-options').addEventListener('change', applyFiltersAndSorting);
document.getElementById('category-filter').addEventListener('change', applyFiltersAndSorting);

document.getElementById('checkout-button').addEventListener('click', () => {
  alert("Secure payment integration coming soon!");
});

// Display all products initially
displayProducts(products);
document.getElementById('checkout-button').addEventListener('click', () => {
  if (cart.length === 0) {
      alert('Your cart is empty!');
      return;
  }

  // Calculate total price
  const totalPrice = cart.reduce((sum, item) => sum + item.price, 0);

  // Redirect to Stripe Checkout
  fetch('/create-checkout-session', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ cart, totalPrice })
  })
  .then(response => response.json())
  .then(session => {
      return Stripe('your-publishable-key-here').redirectToCheckout({ sessionId: session.id });
  })
  .catch(error => console.error('Error:', error));
});
